name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  versions:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      tags: ${{ steps.tags.outputs.tags }}
      packages: ${{ steps.packages.outputs.packages }}
    steps:
    - uses: actions/checkout@v2
    - name: version
      run: |
        echo ::set-output name=version::$(grep -Po '(?<=latest=).*' ./gradle.properties)
      id: version
    - name: tags
      run: |
        echo ::set-output name=tags::$(curl -s https://api.github.com/repos/yanndroid/samsungoneui/tags | grep -Po '(?<="name": ").*(?=")')
      id: tags
    - name: packages
      run: |
        echo ::set-output name=packages::$(curl -su yanndroid:${{ github.token }} https://api.github.com/users/yanndroid/packages/maven/de.dlyt.yanndroid.samsung/versions | grep -Po '(?<="name": ").*(?=")')
      id: packages
    - run: echo ${{ steps.packages.outputs.packages }}

  publish:
    runs-on: ubuntu-latest
    needs: versions
    if: ${{ !contains(needs.versions.outputs.tags, needs.versions.outputs.version) }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
         path: |
           ~/.gradle/caches
           ~/.gradle/wrapper
         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
         restore-keys: |
          ${{ runner.os }}-gradle-
    - uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '8'
    - name: grant execute permission for gradlew 
      run: chmod +x gradlew
    - name: build
      run: ./gradlew -p ./yanndroid/samsung clean uploadArchives
    - name: publish
      run: ./gradlew -p ./yanndroid/samsung publish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: versions
    if: ${{ !contains(needs.versions.outputs.packages, needs.versions.outputs.version) }}
    steps:
    - uses: actions/checkout@v2
    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        release_name: ${{ needs.versions.outputs.version }}
        tag_name: ${{ needs.versions.outputs.version }}
      env:
        GITHUB_TOKEN: ${{ github.token }}
